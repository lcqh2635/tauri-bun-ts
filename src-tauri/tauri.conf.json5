{
  // 约束下面的配置内容和语法遵循 Tauri 2 版本
  "$schema": "https://schema.tauri.app/config/2",
  // 应用名称
  "productName": "tauri-bun-ts",
  // 应用程序版本。如果删除，则使用 Cargo.toml 中的版本号。建议在 Tauri 配置中管理应用版本控制。
  "version": "0.1.0",
  // 应用唯一标识
  // 反向域名表示法的应用程序标识符 （e.g. com.tauri.example）。
  // 此字符串在应用程序中必须是唯一的，因为它用于系统配置，例如捆绑包 ID 和 webview 数据目录的路径。此字符串只能包含字母数字字符（A-Z、a-z 和 0-9）、连字符 （-） 和句点 （.）。。
  "identifier": "com.lcqh.tauri-bun-ts",
  // Tauri 构建配置，https://v2.tauri.org.cn/reference/config/#build
  "build": {
    // 在 bun run tauri dev 启动之前运行的 shell 命令
    "beforeDevCommand": "bun run dev",
    // 在 bun run tauri build 启动之前运行的 shell 命令
    "beforeBuildCommand": "bun run build",
    // 要在开发中加载的 URL，这通常是开发服务器的 URL，它通过热重载和 HMR 为您的应用程序资产提供服务。
    // 大多数现代 JavaScript 打包器（如 Vite）都提供了一种默认启动开发服务器的方法。
    "devUrl": "http://localhost:1420",
    // 应用程序前端打包资产的路径（通常是 javascript 捆绑器的 dist 文件夹）或 URL，
    // 该 URL 可以是在 tauri 应用程序中注册的自定义协议（例如：myprotocol://）或远程 URL（例如：https://site.com/app）。
    "frontendDist": "../dist"
  },
  // Tauri 应用 APP 配置，https://v2.tauri.org.cn/reference/config/#app
  "app": {
    // 应用窗口配置。https://v2.tauri.org.cn/reference/config/#windows
    "windows": [
      {
        "label": "main",
        // 窗口标题。默认值：“Tauri App”
        "title": "tauri-bun-ts",
        "width": 1000,
        "height": 700,
        // 窗口是否居中开始
        "center": true,
        "url": "index.html"
      },
    ],
    // 应用安全配置。https://v2.tauri.org.cn/reference/config/#security
    "security": {
      "csp": null
    }
  },
  "bundle": {
    "active": true,
    "targets": "all",
    "icon": [
      "icons/32x32.png",
      "icons/128x128.png",
      "icons/128x128@2x.png",
      "icons/icon.icns",
      "icons/icon.ico"
    ]
  }
}
